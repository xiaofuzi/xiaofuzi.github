#笨方法学习C语言
这是笨方法学习C语言项目正在进行中的免费版，最近刚转换为一种新的格式，所以可能会有缺失或格式错误。
欢迎提出问题，发送电子邮件到help@learncodethehardway.org即可。

##目录
*[序言]
*[简介：关于C的梦想]
*[练习0：环境搭建]
*[练习1：笨重得编译器]
*[练习2：用make来控制编译]
*[练习3：格式话输出]
*[练习4：Valgrind介绍]
*[练习5：一个c程序的结构]
*[练习6：C中的变量类型]
*[练习7：变量及数学运算]
*[练习8：数组及数组得大小]
*[练习9：数组和字符串]
*[练习10：字符串数组和循环]
*[练习11：while循环和布尔语句]
*[练习12：if,Else-if.Else语句]
*[练习13：Switch语句]
*[练习14：函数得编写和使用]
*[练习15：指针的指针]
*[练习16：结构体和结构体指针]
*[练习17：堆栈内存分配]
*[练习18：指向函数的指针]
*[练习19：一个简单的面向对象系统]
*[练习20：Zed的惊奇的调试器--Macros]
*[练习21: 高级数据类型和数据流控制]
*[练习22：关于栈，作用域和全局]
*[练习23：Meet Duff's Device]
*[练习24: 输入输出，文件]
*[练习25：可变参数函数]
*[练习26：写第一个真正得程序]
*[练习27：]
*[练习28：程序中得makefiles]
*[练习29：库和链接]
*[练习30：自动化测试]
*[练习31：调试代码]
*[练习32：双向链表]
*[练习33：链表的算法]
*[练习34：动态数组]
*[练习35：排序和查找]
*[练习36：安全的数组]
*[练习37：哈希]
*[练习38：哈希算法]
*[练习39：字符算法]
*[练习40：二叉查找树]
*[练习41：]
*[练习42：栈和队列]
*[练习43：一个简单得静态引擎]
*[练习44：循环缓冲区]
*[练习45：一个简单得TCP/IP客户端]
*[练习46：三元查找树]
*[练习47：一个快速的URL路由]
*[练习48：一个微型得虚拟机（一）]
*[练习49：一个微型得虚拟机（二）]
*[练习50：一个微型得虚拟机（三）]
*[练习51：一个微型得虚拟机（四）]
*[练习52：一个微型得虚拟机（五）]
*[练习53：之后，我们该怎么学习？]
*[练习54：解构K&R C]

#经常被问及得问题？
###该课程需要多长的时间来学习？
你应该将其完整的过一遍，但是要保证每天都认真的练习。有的人会花三个月，有的人会花六个月，而有得只需要一周即可。

###我的电脑需要什么配置？
一台OSX或Linux电脑就可以完成本课程的学习。

##序言
这是一份正在编写中的《learn c the hard way》这本书的粗糙复制，语法可能会很糟糕，也可能会有部分的缺失，但是你可以了解我是如何编写这本书的。

你可以任何时候通过发送电子邮件到 ["help@learncodethehardway.org"](help@learncodethehardway.org) 来寻求帮助，我通常会在一到两天内给出回答。

这个列表是一个用来讨论本书和问问题的列表，并不是一个声明列表。

最后，如果你还不会使用Python的话，可以阅读我所编写的[《Learn Python The Hard Way》](http://learnpythonthehardway.org/)，这本书不是面向初学者的，而是面向至少已学过一门语言的人。

##简介：关于C的梦想
>无论是什么我现在接受的觉得最真实，要保证我已从感官或通过感官得到。但有时我>发现感官是不真实的，这使我不会完全去相信曾经欺骗过我一次的人。
>—Rene Descartes, Meditations On First Philosophy

If there ever were a quote that described programming with C, it would be this. To many programmers, this makes C scary and evil. It is the Devil, Satan, the trickster Loki come to destroy your productivity with his seductive talk of pointers and direct access to the machine. Then, once this computational Lucifer has you hooked, he destroys your world with the evil "segfault" and laughs as he reveals the trickery in your bargain with him.

但是C不应该为其背负罪名，对你来说，你的电脑和操作系统控制了它，所以它们才是真正的欺骗者。它们向你隐藏了它们在内部做了什么，这让你不知道它们真正是如何运行的。c语言唯一的失败是，它让你知道内部到底做了什么，并告诉你关于硬件的事实。C gives you the red pill. C pulls the curtain back to show you the wizard. C is truth.

既然C如此的危险，那我们为什么要用它呢？
因为C让你可以控制虚假的抽象和从愚昧中解放出来。

##你将会学习什么？
这本书的目的是让你能更好的掌控C语言并用C编写你自己的软件，或是修改他人的代码。最后我们会从一本更著名的书《K&R C and code》中抽取一些代码来回顾你所学的知识。为了能够看懂这些代码你需要做下面的这些事：
* C的基本语法和语义
* 了解编译器，makefiles文件，链接器
* 查找bug并修正
* 防御性编程练习
* 深入理解C代码
* 编写基本的Unix系统软件

到最后一章，你将会有足够的知识去解决基本的系统软件，库以及其它的小工程。

##如何阅读本书？
这本书是针对至少已经学习过一门编程语言的读者，如果你还没有学习过任何一门编程语言，那么我建议你先去阅读《Learn Python The Hard Way》(#).这本书是完全针对初学者的，而且也非常适合作为编程的第一本书。当你已经满足以上条件后，你就可以开始阅读本书了。

对于已经学习过编程的人来时候，一开始可能会觉得本书会有些奇怪。你所阅读的其它书籍一般会在段落中插入有很多的代码
